#!/bin/bash
#
# Perform build, run, clean.
# author: Javier Chavez
# email: javierc@cs.unm.edu


make_javadoc () {
    rm -rf doc/
    mkdir doc
    javadoc -d doc/ -sourcepath src/ -subpackages starvationevasion
}

make_sources () {
    # find all the files but exclude emacs backup files
    find . ! -name "*#*" -name "*.java" > files.txt
}

build () {
    rm -rf dist/
    mkdir dist
    make_sources
    mkdir dist/data
    cp -rf data/* dist/
    cp -rf libs dist/
    if [[ -n $(groups $(whoami) | grep foodgame) ]]; then
	    chgrp -R foodgame dist
	    chmod -R g+rwx dist
    fi

    javac -classpath ".:libs/*" @files.txt -d ./dist
    rm files.txt
}

monitor_connections() {
    SERVER_PID="$(ps -ef | grep 'Server 5555' | grep -v grep | awk '{print $2}')"
    echo "Monitoring pid: $SERVER_PID"
    lsof -r 2 -p "$SERVER_PID" -i -a
}

run_server_n_build() {
    java -classpath "./dist:./dist/libs/*" starvationevasion/server/Server "$1"
}

run_server () {
    build
    # java -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -Xms128m -Xmx2g -Xcomp -classpath ./dist starvationevasion/server/Server "$1" "$2"
    java -server -XX:+OptimizeStringConcat -XX:+UseCodeCacheFlushing -XX:+UseFastAccessorMethods -classpath "./dist:./dist/libs/*" starvationevasion/server/Server "$1"
    # echo $! > server.pid
}

run_client () {
    build
    java -client -classpath "./dist:./dist/libs/*" starvationevasion/ai/AI "$1" "$2"
}

run_co_test () {
    build
    java -client -classpath "./dist:./dist/libs/*" starvationevasion/sim/CoordinateTesting
}

clean () {
    rm -rf dist/
}

move_webui () {
    rm /nfs/student/j/javierc/public_html/foodgame/*
    cp /nfs/student/j/javierc/starvation_evasion/src/starvationevasion/server/*.js /nfs/student/j/javierc/public_html/foodgame/
    cp /nfs/student/j/javierc/starvation_evasion/src/starvationevasion/server/*.html /nfs/student/j/javierc/public_html/foodgame/
}

if [ "$1" == "build" ]
then
    build
elif [ "$1" == "server" ]
then
    if [ "$#" -eq 2 ]
    then
        run_server "$2"
    else
        run_server 5555
    fi
elif [ "$1" == "nb_server" ] 
then
    if [ "$#" -eq 2 ]
    then
        run_server_n_build "$2"
    else
        run_server_n_build 5555
    fi
elif [ "$1" == "client" ]
then
    if [ "$#" -eq 3 ]
    then
        run_client "$2" "$3"
    else
        run_client localhost 5555
    fi
elif [ "$1" == "clean" ]
then
    clean
elif [ "$1" == "docs" ]
then
    make_javadoc
elif [ "$1" == "webui" ]
then
    move_webui
elif [ "$1" == "tester" ]
then
    run_co_test
elif [ "$1" == "monitor" ]
then
     monitor_connections
else
    echo "Command not found"
fi
